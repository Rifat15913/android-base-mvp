apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

// Add kapt plugin for compiling data binding in kotlin
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion rootProject.ext.target_sdk_version
    defaultConfig {
        applicationId "io.diaryofrifat.code.rifbase"
        minSdkVersion rootProject.ext.minimum_sdk_version
        targetSdkVersion rootProject.ext.target_sdk_version

        // Enable Multidex App; so that there will be no limitation (64k+) in method counting
        multiDexEnabled true

        // Version code and name should be changed for every release
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    // Enable Android data binding library
    dataBinding{
        enabled true
    }
}

dependencies {
    /*
    * Android data binding library compiler for Kotlin
    * */
    kapt "com.android.databinding:compiler:$gradle_version"

    /*
     * Add .jar libraries from external folder
     * */
    implementation fileTree(include: ['*.jar'], dir: 'libs')

    /*
     * Multidex
     * */
    implementation 'com.android.support:multidex:1.0.3'

    /*
     * Kotlin
     * */
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    /*
     * Android support libraries
     * */
    // Appcompat
    implementation "com.android.support:appcompat-v7:$rootProject.ext.support_library_version"
    // Design library
    implementation "com.android.support:design:$rootProject.ext.support_library_version"
    // RecyclerView
    implementation "com.android.support:recyclerview-v7:$rootProject.ext.support_library_version"
    // CardView
    implementation "com.android.support:cardview-v7:$rootProject.ext.support_library_version"
    // Exif Interface (for image processing; i.e. rotate)
    implementation "com.android.support:exifinterface:$rootProject.ext.support_library_version"

    /*
    * Constraint layout
    * */
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'

    /*
    * Circular ImageView
    * */
    implementation 'com.mikhaellopez:circularimageview:3.1.0'

    /*
     * Glide (Image loader)
     * */
    implementation 'com.github.bumptech.glide:glide:4.7.1'

    /*
    * uCrop (crops images)
    * */
    implementation 'com.github.yalantis:ucrop:2.2.2'

    /*
    * Stylish toast message
    * */
    implementation 'com.github.GrenderG:Toasty:1.3.0'

    /*
    * Reactive Extensions (Rx)
    * */
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.2'
    implementation 'io.reactivex.rxjava2:rxjava:2.2.0'

    /*
    * RxBinding with Views
    * */
    // Platform bindings
    implementation 'com.jakewharton.rxbinding2:rxbinding:2.1.1'
    // Support-v4 bindings
    implementation 'com.jakewharton.rxbinding2:rxbinding-support-v4:2.1.1'
    // Appcompat-v7 bindings
    implementation 'com.jakewharton.rxbinding2:rxbinding-appcompat-v7:2.1.1'
    // Design library bindings
    implementation 'com.jakewharton.rxbinding2:rxbinding-design:2.1.1'
    // RecyclerView bindings
    implementation 'com.jakewharton.rxbinding2:rxbinding-recyclerview-v7:2.1.1'

    /*
    * Timber (Replacement of log)
    * */
    implementation 'com.jakewharton.timber:timber:4.7.1'

    /*
     * Testing
     */
    testImplementation 'junit:junit:4.12'   // JVM testing
    androidTestImplementation 'com.android.support.test:runner:1.0.2'   // Instrumentation testing
}
